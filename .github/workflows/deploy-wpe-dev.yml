name: Deploy to WPE Dev

on:
  push:
    branches:
      - develop

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2

      - name: Cache Composer dependencies
        uses: actions/cache@v2
        with:
          path: /tmp/composer-cache
          key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}

      - name: Composer install dependencies
        uses: php-actions/composer@v5
        with:
          php_version: 7.4
          command: install

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache NPM dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-${{ hashFiles('**/package-lock.json') }}

      - name: NPM install dependencies
        run: npm i --legacy-peer-deps

      - name: RSYNC to WPE
        uses: easingthemes/ssh-deploy@v2
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
          ARGS: "-v -a -z --delete"
          SOURCE: "./"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: "~/sites/webdevsanddev/wp-content/"
          EXCLUDE: ".git/, .github/, cache/, uploads/, upgrade/, languages/, node_modules/, auth.json, .gitignore, package.json, package-lock.json, docker_tag, output.log, composer.json, composer.lock, debug.log, .env, mysql.sql"
